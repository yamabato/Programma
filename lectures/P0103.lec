TITLE: 1-3 四則演算

LECTURE:

PRG:
PLN: 前節では、Pythonを用いて"Hello World!"と表示させてみました。
PLN: この節ではPythonを電卓として使ってみましょう。
EPR:

NLN:

PRG:
PLN: まず、四則演算を試してみましょう。
PLN: 四則演算は加算、減算、乗算、除算のことです。
PLN: 一般にそれらの記号には、+,-,×,÷が用いられます。
PLN: しかし、Pythonを含む多くのプログラミング言語では乗算と除算に別の記号を用います。
PLN: 乗算を表すのにアスタリスク
COD: *
PLN: 、除算を表すのにスラッシュ
COD: /
PLN: を用います。
EPR:

NLN:

PRG:
PLN: ×の記号はコンピュータのキーボードになかったため、アスタリスクで代用されたと言われています。
PLN: また、割り算の記号に÷を使うのは、日米英韓泰など一部の国であり、他の国では
COD: /
PLN: や
COD: :
PLN: が用いられています。
EPR:

NLN:

PRG:
PLN: Pythonでは四則演算に
COD: +
PLN: ,
COD: -
PLN: ,
COD: *
PLN: ,
COD: /
PLN: を用いますが、他にも
COD: %
PLN: ,
COD: //
PLN: ,
COD: **
PLN: などの算術演算子が用意されています。
EPR:

PRG:
COD: %
PLN: は剰余、すなわち除算の余りを求めるのに使います。例えば、
COD: 5 % 2
PLN: は
COD: 1
PLN: となります。
EPR:

PRG:
COD: //
PLN: は整数除算を行うのに使います。除算結果の整数部分を返すため、例えば
COD: 5 // 2
PLN: は
COD: 2
PLN: となります。
EPR:

PRG:
COD: **
PLN: はべき乗を計算するために使います。例えば、
COD: 2 ** 6
PLN: は
COD: 64
PLN: となります。
EPR:

NLN:

PRG:
PLN: 演算子には優先順位があります。
PLN: 今回紹介した7つの演算子の優先順位は
COD: **
PLN: が最も高く、次いで
COD: *
PLN: ,
COD: /
PLN: ,
COD: %
PLN: ,
COD: //
PLN: となります。
COD: +
PLN: と
COD: -
PLN: は今回紹介した中では最も優先順位の低い演算子です。
PLN: 一つの式中に複数の演算子があるとき、優先順位に差がある場合は優先順位の高いものから計算されます。
PLN: 優先順位に差がない場合、左から先に計算されます。
PLN: 例えば、
COD: 2 * 3 + 4
PLN: を計算すれば
COD: 10
PLN: となり、
COD: 2 + 3 * 4
PLN: を計算すると
COD: *
PLN: の優先順位が高いことから
COD: 14
PLN: となります。
EPR:

NLN:

PRG:
PLN: 優先順位が低い演算子から先に計算したい場合、括弧
COD: ()
PLN: を使うことができます。
PLN: 括弧で括られた部分は先に計算されるため、
COD: 2 * 3 + 4
PLN: は
COD: 10
PLN: ですが、
COD: 2 * (3 + 4)
PLN: は
COD: 3 + 4
PLN: が先に計算されることにより、
COD: 14
PLN: となります。
EPR:


TASK:
STMT:

PRG:
COD: 10
PLN: に
COD: 2
PLN: の
COD: 4
PLN: 乗を加え、
COD: 5
PLN: で割った時の整数部分を
COD: print
PLN: 関数を用いて表示せよ。
EPR:

NLN:

PRG:
COD: 5
PLN: を
COD: 2
PLN: を
COD: 4
PLN: 乗したものから引いた値で
COD: 17
PLN: を割った時の余りを、更に
COD: 2
PLN: で割った値を
COD: print
PLN: 関数を用いて表示せよ。
EPR:

ESTMT:

CASE:
OUTPUT: 5::[NEWLINE];3.0::[NEWLINE];
ECASE:

CODE:
# print("Hello World!")を実行してみましょう